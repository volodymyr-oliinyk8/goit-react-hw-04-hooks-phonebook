{"version":3,"sources":["components/ContactsList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","styles","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","contactNameId","v4","handleChange","e","currentTarget","value","reset","form","preventDefault","htmlFor","type","pattern","title","required","onChange","id","ContactsList","contacts","onDelete","map","item","onClick","Filter","filter","App","JSON","parse","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","contact","find","toLowerCase","alert","prevState","normalizedFilter","includes","allVisibleContacts","contactId","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a56f9b1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3iVhc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3P6cm\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport { v4 } from 'uuid';\n\nimport styles from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contactNameId = v4();\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const options = { name, number };\n    onSubmit(options);\n\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label htmlFor={contactNameId}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          id={contactNameId}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} name={name} key={id}>\n          {name}: {number}\n          <button type=\"button\" onClick={() => onDelete(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.filter}>\n    Find contact by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { v4 } from 'uuid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handlerFormSubmit = ({ name, number }) => {\n    const contact = {\n      id: v4(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      setContacts(prevState => [contact, ...prevState]);\n    }\n  };\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n  const deleteContact = contactId => {\n    setContacts(prevContacts => [\n      ...prevContacts.filter(contact => contact.id !== contactId),\n    ]);\n  };\n  const allVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handlerFormSubmit} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList contacts={allVisibleContacts()} onDelete={deleteContact} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__14ldb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__4n4Wu\"};"],"sourceRoot":""}